{"hash":"debabfc5298e69e7bd7d73a37d4f13df2ff48dbb","data":{"doc":{"title":"Getting Started","path":"/getting-started/","date":"28. April 2020","timeToRead":1,"content":"<h2 id=\"what-is-ghost\"><a href=\"#what-is-ghost\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What is Ghost</h2>\n<p>Ghost is a small, class-based toy scripting language. The foundations of the language were developed by going through the excellent <a href=\"https://craftinginterpreters.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Crafting Interpreters</a> book by <a href=\"http://journal.stuffwithstuff.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bob Nystron</a>. The bytecode virtual machine powering Ghost is written in C and can be found on GitHub under the MIT license.</p>\n<h2 id=\"installing-ghost\"><a href=\"#installing-ghost\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing Ghost</h2>\n<p>If you're on a Unix or Mac machine, running the following in your terminal will quickly get you started:</p>\n<pre class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/axiom-labs/ghost\n<span class=\"token builtin class-name\">cd</span> ghost\n<span class=\"token function\">make</span>\n./ghost</pre>\n<p>This downloads and builds the latest <code class=\"language-text\">master</code> version of Ghost found on GitHub. You will find a <code class=\"language-text\">ghost</code> executable at the root of this directory if everything was successful.</p>\n<h2 id=\"interactive-mode\"><a href=\"#interactive-mode\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Interactive Mode</h2>\n<p>If you just run <code class=\"language-text\">ghost</code> without any arguments, it starts the interpreter in interactive mode (aka, REPL mode, <em>read-eval-print loop</em>). You can type in a line of code, and immediately execute it. While in this mode, your state is saved until you exit the program. Meaning if you define a variable, you may reference the variable later on.</p>\n<p>Ready to give Ghost a spin?</p>\n<pre class=\"language-javascript\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre>\n"}},"context":{}}